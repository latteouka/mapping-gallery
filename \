uniform float u_time;
uniform float u_scrollVelocity;
uniform vec2 u_meshSize;
uniform vec2 u_textureSize;

varying vec3 v_pos;
varying vec2 v_uv;

float PI = 3.1415926535897932384626433832795;

void main(){
  v_pos = position;
  v_uv = uv;

  vec3 pos = position;
  vec2 uvCurve = uv;

  float x = 0.0;
  // float y = 0.0;
  float y = sin(uvCurve.x * -0.5) * u_scrollVelocity * 3.0;
  // float z = cos(uvCurve.y * PI) * u_scrollVelocity;
  float z = 0.0;

  if(u_scrollVelocity > 0.0){
    z = -cos(uvCurve.y - 0.5) * u_scrollVelocity * -500.0;
  }
  else {
    z = cos(uvCurve.y - 0.5) * u_scrollVelocity * 500.0;
  }

  vec3 curve = vec3(x, y, z);
  pos += curve * 0.003;

  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);
}
